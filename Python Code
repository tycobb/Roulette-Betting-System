__author__ = 'Main Desktop'

import numpy as np
from random import randint


def builddictionary():
    d = {}
    d[0] = '00'

    for i in range(37):
        d[i+1] = i

    return d


def winningnumbers():

    win = []
    for i in range(1,35,3):
        win.append(i)

    return win


def bankroll():

    simresult = []

    possiblenumbers = builddictionary()

    winners = winningnumbers()

    # print(possiblenumbers)

    # assert 1 == 0

    for i in range(10000):
        if i % 1000 == 0: print('Simulator Run # {}'.format(i))
        balance = 10000
        minbet = 5
        maxbet = 1000

        bet = minbet


        bal, cntwinner, cntloser, maxb = play(winners,possiblenumbers, balance, minbet, bet, maxbet,0,0,0)

        l = []
        l.append(bal)
        l.append(cntwinner)
        l.append(cntloser)
        l.append(cntwinner/(cntwinner+cntloser))
        l.append(maxb)

        simresult.append(l)

    np.set_printoptions(precision=3,suppress=True)
    x = np.array(simresult)

    # print(x)

    print('starting bal: {}\nminbet: {}\nmaxbet: {}\n'.format(balance, minbet, maxbet))


    print('Max Ending Balance: {}'.format(max(x[:,0])))
    print('Max Spin: {}'.format(max(x[:,1]+x[:,2])))
    print('Max Bet: {}'.format(max(x[:,4])))
    # print('\n')
    print('Min Ending Balance: {}'.format(min(x[:,0])))
    print('Min Spin: {}'.format(min(x[:,1]+x[:,2])))
    print('Min MaxBet: {}'.format(min(x[:,4])))
    # print('\n')
    print('Mean Return: {:.2%}'.format(((np.mean(x[:,0]) - balance)/balance)))
    print('Mean Spin: {}'.format(np.mean(x[:,1]+x[:,2])))
    print('Mean MaxBet: {}'.format(np.mean(x[:,4])))


def play(winners, possiblenumbers, bal, minbet, bet, maxbet, cntwinner, cntloser, totalmaxbet):

    # print(bal, bet, cntwinner, cntloser, totalmaxbet)

    if bet > maxbet: bet = maxbet
    if totalmaxbet < bet: totalmaxbet = bet
    if bal <= 0: return (bal, cntwinner, cntloser, totalmaxbet)
    if bet > bal: bet = bal
    
    
    if cntwinner + cntloser > 950: return (bal, cntwinner, cntloser, totalmaxbet)

    spin = randint(0,37)

    result = possiblenumbers[spin]

    # print(bal, bet, cntwinner, cntloser, totalmaxbet)

    if result in winners:
        bal += bet*2
        # print(bal, bet, maxbet,'W')
        cntwinner += 1
        bet = minbet
        return play(winners, possiblenumbers, bal, minbet, bet, maxbet, cntwinner, cntloser, totalmaxbet)
    else:
        bal -= bet
        # print(bal, bet, maxbet,'L')
        cntloser += 1
        bet *= 2
        return play(winners, possiblenumbers, bal, minbet, bet, maxbet, cntwinner, cntloser, totalmaxbet)


def place_bet(**d):
    # This will set the bet size

    # If the bal is less then zero the session is over.
    if bal <= 0: return (bal, cntwinner, cntloser, totalmaxbet)

    # Makes sure the bet isn't larger than the table max limit. If so change the bet size to the limit
    if bet > maxbet: bet = maxbet

    # This will keep track of the largest bet for each session.
    if totalmaxbet < bet: totalmaxbet = bet

    # This will make the bet the remaining balance if the Balance is less than the mininum bet.
    if bet > bal: bet = bal
    



def main():
    import time

    start = time.time()

    bankroll()

    print('Script ran in {:.5f} seconds'.format(time.time()-start))


if __name__ == '__main__': main()


