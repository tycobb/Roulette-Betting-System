__author__ = 'Main Desktop'
import numpy as np
from random import randint
import time
from copy import deepcopy
import pandas as pd


def builddictionary():
    d = {}
    d[0] = '00'

    for i in range(37):
        d[i+1] = i

    return d


def winningnumbers():

    win = []
    for i in range(1,35,3):
        win.append(i)

    return win


def play(d):

    # print(d['bankroll'], d['bet'])
    # This is to stop the session. Python has a limit of ~1000 stacks
    if d['totalwins'] + d['totallosses'] > 1000:
        d['playing'] = 0
        return d

    spin = randint(0,37)

    result = d['table'][spin]

    d['spins'] += 1

    if result in d['winners']:
        d['bankroll'] += d['bet']*3
        d['bet'] = d['minlimit']
        d['totalwins'] += 1

        if d['lastresult'] == 'won' or d['lastresult'] == 0:
            d['streak'] += 1
        elif d['lastresult'] == 'loss':
            d['streak'] = 1

        if d['beststreak'] < d['streak']: d['beststreak'] = d['streak']

        d['lastresult'] = 'won'

    else:
        d['totallosses'] += 1

        d['bet'] *= 2

        if d['lastresult'] == 'won': d['streak'] = 1
        elif d['lastresult'] == 'loss' or d['lastresult'] == 0: d['streak'] += 1

        if d['worststreak'] < d['streak']: d['worststreak'] = d['streak']

        d['lastresult'] = 'loss'

    return d


def place_bet(d):

    # This will set the bet size

    # If the bal is less then zero the session is over.
    if d['bankroll'] <= 0:
        d['playing'] = 0
        return d

    # Makes sure the bet isn't larger than the table max limit. If so change the bet size to the limit
    if d['bet'] > d['maxlimit']: d['bet'] = d['maxlimit']

    # This will keep track of the largest bet for each session.
    if d['maxbet'] < d['bet']: d['maxbet'] = d['bet']

    # This will make the bet the remaining balance if the Balance is less than the mininum bet.
    if d['bet'] > d['bankroll']: d['bet'] = d['bankroll']

    d['bankroll'] -= d['bet']

    # print(d['bet'])
    return d


def sitdownatthetable():

    # Dictionary that will be holding all the variables...

    d = {}

    # The possible numbers that you can pick

    d['table'] = builddictionary()

    d['winners'] = winningnumbers()

    # Table rules
    d['minlimit'] = 5
    d['maxlimit'] = 1000

    session = []

    for x in range(100):
        if x % 1000 == 0: print('Simulator Run # {}'.format(x))

        # Used to tell if you will continue to play 1 = TRUE; 0 = FALSE
        d['playing'] = 1

        # Starting from the beginning
        d['bet'] = d['minlimit']
        d['bankroll'] = 10000
        d['maxbet'] = 0
        d['totalwins'] = 0
        d['totallosses'] = 0
        d['beststreak'] = 0
        d['worststreak'] = 0
        d['streak'] = 0
        d['lastresult'] = 0
        d['spins'] = 0

        for i in range(1000):
            place_bet(d)
            if not d['playing'] == 0:
                play(d)
            else:
                break

        session.append(deepcopy(d))


    df = pd.DataFrame(session)

    df['winningpercent'] = df['totalwins']/ (df['spins'])

    print('\n{}'.format(df[['bankroll','beststreak','totalwins','totallosses','spins','beststreak','worststreak',
                            'maxbet','winningpercent']].describe()))


def main():

    sitdownatthetable()


if __name__ == '__main__':

    start = time.time()

    main()

    print('\nScript ran in {:.5f} seconds'.format(time.time()-start))


